@page "/smoker"
@attribute [Authorize]
@using WebBlazor.Client.Models.Smoking
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IHttpClientFactory HttpFactory
@inject NavigationManager Router

<BSContainer>
    <h1>Recipes</h1>

    <BSButton Class="mb-4" ButtonType="ButtonType.Button" Color="Color.Primary" @onclick="@(() => Router.NavigateTo("/smoker/create"))">
        Create
    </BSButton>

    <SpinLoader IsLoading="@(Recipes == null)">
        <ContentTemplate>

            <BSRow Class="mb-4">
                <BSCol MD="4">
                    <input @bind="Search" @oninput="OnSearch" class="form-control" placeholder="Search..." />
                </BSCol>
            </BSRow>
            <BSRow>
                <BSCol>
                    <BSTable>
                        <thead>
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Number of Steps</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Recipes)
                            {
                                <tr>
                                    <td>
                                        @item.DisplayName
                                    </td>
                                    <td>@item.Steps</td>
                                    <td>
                                        <NavLink href="@($"/smoker/{item.Name}/details")">
                                            Details
                                        </NavLink>
                                        &nbsp;|
                                        <NavLink href="@($"/smoker/{item.Name}/edit")">
                                            Edit
                                        </NavLink>
                                        &nbsp;|
                                        <NavLink href="@($"/smoker/{item.Name}/delete")">
                                            Delete
                                        </NavLink>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </BSTable>
                </BSCol>
            </BSRow>

        </ContentTemplate>
    </SpinLoader>
</BSContainer>

@code {

    private string Search { get; set; }
    private RecipeSummary[] Recipes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetRecipes(Search);
    }

    private async Task OnSearch(ChangeEventArgs e)
    {
        await GetRecipes(e.Value?.ToString());
    }

    private async Task GetRecipes(string search)
    {
        var http = HttpFactory.CreateClient(Infrastructure.HttpClients.HttpClients.SmokingClient);
        var url = string.IsNullOrEmpty(search) ? "recipes" : QueryHelpers.AddQueryString("recipes", "search", search);

        try
        {
            Recipes = await http.GetFromJsonAsync<RecipeSummary[]>(url);
            StateHasChanged();
        }
        catch (AccessTokenNotAvailableException ex)
        {
            ex.Redirect();
        }
    }
}