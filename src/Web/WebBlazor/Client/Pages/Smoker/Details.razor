@page "/smoker/{Name}/details"
@attribute [Authorize]

@inject IHttpClientFactory HttpFactory
@inject NavigationManager Router
@inject ILogger<Edit> Logger

<SpinLoader IsLoading="@(Data == null)">
    <ContentTemplate>
        <BSRow>
            <BSCol MD="6">

                <h2 class="font-weight-light text-center text-muted py-3">@Data.DisplayName - <BSBadge Color="Color.Primary" IsPill="true">@Data.Protein.Humanize()</BSBadge></h2>
                <p class="text-justify">
                    @Data.Description
                </p>
                

            </BSCol>
            <BSCol MD="6">
                <BSContainer>
                    <Timeline Items="Data.Steps"/>
                </BSContainer>
            </BSCol>
        </BSRow>
    </ContentTemplate>
</SpinLoader>


@code {
    [Parameter]
    public string Name { get; set; }

    private Query Data { get; set; }

    public record Query
    {
        public string DisplayName { get; init; }
        public string Description { get; init; }
        public string Protein { get; init; }
        public List<QueryStep> Steps { get; init; }


        public record QueryStep
        {
            public int Step { get; init; }
            public string Description { get; init; }
            public double? GrillTemperature { get; init; }
            public TimeSpan? Duration { get; init; }
            public double? ProbeTemperature { get; init; }
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        var http = HttpFactory.CreateClient(HttpClients.SmokingClient);
        Data = await http.GetFromJsonAsync<Query>($"recipes/{Name}");
        if (Data == null)
        {
            Router.NavigateTo("/smoker");
        }
    }

}