@page "/smoker/{Name}/details"
@attribute [Authorize]

@inject IHttpClientFactory HttpFactory
@inject NavigationManager Router
@inject ILogger<Edit> Logger

<SpinLoader IsLoading="@(Data == null)">
    <ContentTemplate>
        <BSRow>
            <BSCol MD="6">

                <h4>Recipe</h4>

                <BSBasicForm>

                    <BSFormGroup IsRow="true">
                        <BSLabel For="@Data.DisplayName" SM="3">Display name</BSLabel>
                        <BSCol SM="9">
                            <BSBasicInput Id="@Data.DisplayName" InputType="InputType.Text" IsReadonly="true" IsPlaintext="true" Value="Data.DisplayName"/>
                        </BSCol>
                    </BSFormGroup>
                    
                    <BSFormGroup IsRow="true">
                        <BSLabel For="@Data.Protein" SM="3">Protein</BSLabel>
                        <BSCol SM="9">
                            <BSBasicInput Id="@Data.Protein" InputType="InputType.Text" IsReadonly="true" IsPlaintext="true" Value="Data.Protein.Humanize()"/>
                        </BSCol>
                    </BSFormGroup>

                    <BSFormGroup IsRow="true">
                        <BSLabel For="@Data.Description" SM="3">Description</BSLabel>
                        <BSCol SM="9">
                            <BSBasicInput Id="@Data.Description" InputType="InputType.TextArea" IsReadonly="true" IsPlaintext="true" Value="Data.Description"/>
                        </BSCol>
                    </BSFormGroup>

                    <BSButton Color="Color.Secondary" ButtonType="ButtonType.Button" @onclick="@(() => Router.NavigateTo("/smoker"))">Go back</BSButton>
                    <BSButton Color="Color.Primary" ButtonType="ButtonType.Button" @onclick="@(() => Router.NavigateTo($"/smoker/{Name}/edit"))">Edit</BSButton>

                </BSBasicForm>
            </BSCol>
            <BSCol MD="6">
                <BSContainer>

                    <h4>Steps</h4>

                    <Timeline Items="Data.Steps"/>

                </BSContainer>
            </BSCol>
        </BSRow>
    </ContentTemplate>
</SpinLoader>


@code {
    [Parameter]
    public string Name { get; set; }

    private Query Data { get; set; }

    public record Query
    {
        public string DisplayName { get; init; }
        public string Description { get; init; }
        public string Protein { get; init; }
        public List<QueryStep> Steps { get; init; }


        public record QueryStep
        {
            public int Step { get; init; }
            public string Description { get; init; }
            public double? Temperature { get; init; }
            public TimeSpan? Duration { get; init; }
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        var http = HttpFactory.CreateClient(HttpClients.SmokingClient);
        Data = await http.GetFromJsonAsync<Query>($"recipes/{Name}");
        if (Data == null)
        {
            Router.NavigateTo("/smoker");
        }
    }

}